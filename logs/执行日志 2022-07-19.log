2022-07-19 22:32:37,314 --> Main.py              [line:20 ] --> INFO  --> 运行./case/testcase.xlsx测试用例
2022-07-19 22:32:37,370 --> ReadExcel.py         [line:19 ] --> INFO  --> ---------------Sheet1---------------
2022-07-19 22:32:37,370 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第1步骤：创建Chrome浏览器
2022-07-19 22:32:38,472 --> WebDriverWrapper.py  [line:57 ] --> INFO  --> 启动浏览器 --> Chrome
2022-07-19 22:32:38,474 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第2步骤：访问电商系统
2022-07-19 22:32:38,474 --> SeleniumWrapper.py   [line:81 ] --> INFO  --> 访问[http://www.testingedu.com.cn:8000/Home/User/login.html]地址
2022-07-19 22:32:42,750 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第3步骤：输入账号
2022-07-19 22:32:42,750 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[name]方式定位[username]元素
2022-07-19 22:32:43,744 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[name]方式定位[username]元素并输入[13800138006]文本
2022-07-19 22:32:43,773 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第4步骤：输入密码
2022-07-19 22:32:43,773 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[password]元素
2022-07-19 22:32:44,701 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[id]方式定位[password]元素并输入[0000]文本
2022-07-19 22:32:44,727 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第5步骤：输入验证码
2022-07-19 22:32:44,728 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[verify_code]元素
2022-07-19 22:32:45,617 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[id]方式定位[verify_code]元素并输入[0000]文本
2022-07-19 22:32:45,645 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第6步骤：点击登录按钮
2022-07-19 22:32:45,645 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素
2022-07-19 22:32:46,545 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素并点击
2022-07-19 22:32:46,579 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第7步骤：登录成功后截图
2022-07-19 22:32:46,579 --> SeleniumWrapper.py   [line:118] --> INFO  --> 截图成功存放路径：[./picture/特斯汀电商系统登录成功1.png]
2022-07-19 22:32:46,961 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第8步骤：校验登录后是否存在退出的元素
2022-07-19 22:32:46,961 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[link text]方式定位[安全退出]元素
2022-07-19 22:32:57,031 --> SeleniumWrapper.py   [line:146] --> ERROR --> Traceback (most recent call last):
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 88, in locator_element
    self.hide_wait(name, value)
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 30, in hide_wait
    hide_wait.until(EC.visibility_of_element_located(lambda driver: driver.find_element(name, value)))
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\support\wait.py", line 71, in until
    value = method(self._driver)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\support\expected_conditions.py", line 128, in __call__
    return _element_if_visible(_find_element(driver, self.locator))
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\support\expected_conditions.py", line 411, in _find_element
    return driver.find_element(*by)
TypeError: find_element() argument after * must be an iterable, not function

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 142, in assert_text
    reality = self.locator_element(name, value).text
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 92, in locator_element
    element = self.driver.find_element(name, value)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 978, in find_element
    'value': value})['value']
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 321, in execute
    self.error_handler.check_response(response)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"link text","selector":"安全退出"}
  (Session info: chrome=99.0.4844.74)


2022-07-19 22:32:57,078 --> ReadExcel.py         [line:19 ] --> INFO  --> ---------------Sheet3---------------
2022-07-19 22:32:57,078 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-19 22:32:57,169 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第2步骤：访问电商系统
2022-07-19 22:32:57,169 --> SeleniumWrapper.py   [line:81 ] --> INFO  --> 访问[http://www.testingedu.com.cn:8000/Home/User/login.html]地址
2022-07-19 22:32:57,541 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第3步骤：输入账号
2022-07-19 22:32:57,541 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[name]方式定位[username]元素
2022-07-19 22:32:58,481 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[name]方式定位[username]元素并输入[13800138006]文本
2022-07-19 22:32:58,508 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第4步骤：输入密码
2022-07-19 22:32:58,508 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[password]元素
2022-07-19 22:32:59,405 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[id]方式定位[password]元素并输入[123456]文本
2022-07-19 22:32:59,432 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第5步骤：输入验证码
2022-07-19 22:32:59,432 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[verify_code]元素
2022-07-19 22:33:00,359 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[id]方式定位[verify_code]元素并输入[0000]文本
2022-07-19 22:33:00,388 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第6步骤：点击登录按钮
2022-07-19 22:33:00,388 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素
2022-07-19 22:33:01,318 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素并点击
2022-07-19 22:33:01,347 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第7步骤：登录成功后截图
2022-07-19 22:33:01,347 --> SeleniumWrapper.py   [line:118] --> INFO  --> 截图成功存放路径：[./picture/特斯汀电商系统登录成功3.png]
2022-07-19 22:33:02,892 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第8步骤：校验登录后是否存在退出的元素
2022-07-19 22:33:02,892 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[link text]方式定位[安全退出]元素
2022-07-19 22:33:03,810 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第9步骤：强制等待2秒
2022-07-19 22:33:05,830 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第10步骤：跳转到商城首页
2022-07-19 22:33:05,830 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[link text]方式定位[返回商城首页]元素
2022-07-19 22:33:37,427 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[link text]方式定位[返回商城首页]元素并点击
2022-07-19 22:33:37,458 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第11步骤：强制等待2秒
2022-07-19 22:33:39,512 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第12步骤：鼠标悬停到手机数码控件树上
2022-07-19 22:33:39,512 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[link text]方式定位[手机数码]元素
2022-07-19 22:33:40,727 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第13步骤：点击上步骤展开后菜单中的手机
2022-07-19 22:33:40,727 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//*[@id="cata-nav"]/div[1]/div[2]/div[1]/div[2]/dl[1]/dd/a[1]]元素
2022-07-19 22:33:41,702 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[//*[@id="cata-nav"]/div[1]/div[2]/div[1]/div[2]/dl[1]/dd/a[1]]元素并点击
2022-07-19 22:33:41,737 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第14步骤：跳转到新的页面
2022-07-19 22:33:41,787 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第15步骤：点击第一个商品
2022-07-19 22:33:41,787 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img]元素
2022-07-19 22:33:47,134 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img]元素并点击
2022-07-19 22:33:47,164 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第16步骤：强制等待2秒
2022-07-19 22:33:49,228 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第17步骤：选择版本：全网通4G+64G
2022-07-19 22:33:49,228 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[goods_spec_a_10]元素
2022-07-19 22:33:50,201 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[id]方式定位[goods_spec_a_10]元素并点击
2022-07-19 22:33:50,237 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第18步骤：选择配色：铂光色
2022-07-19 22:33:50,237 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[goods_spec_a_12]元素
2022-07-19 22:33:51,208 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[id]方式定位[goods_spec_a_12]元素并点击
2022-07-19 22:33:51,235 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第19步骤：选择套餐：套餐二
2022-07-19 22:33:51,235 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[goods_spec_a_17]元素
2022-07-19 22:33:52,207 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[id]方式定位[goods_spec_a_17]元素并点击
2022-07-19 22:33:52,244 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第20步骤：加入购物车
2022-07-19 22:33:52,245 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[id]方式定位[join_cart]元素
2022-07-19 22:33:53,193 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[id]方式定位[join_cart]元素并点击
2022-07-19 22:33:53,236 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第21步骤：切入弹出frame
2022-07-19 22:33:54,418 --> SeleniumWrapper.py   [line:206] --> INFO  --> 切入[layui-layer-iframe1]Frame框架成功！
2022-07-19 22:33:54,475 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第22步骤：校验是否成功加入购物车
2022-07-19 22:33:54,475 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//span[text()="添加成功"]]元素
2022-07-19 22:33:55,457 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第23步骤：商品加入购物车成功截图
2022-07-19 22:33:55,457 --> SeleniumWrapper.py   [line:118] --> INFO  --> 截图成功存放路径：[./picture/商品加入购物车成功.png]
2022-07-19 22:33:55,744 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第24步骤：去购物车结算
2022-07-19 22:33:55,744 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//a[text()="去购物车结算"]]元素
2022-07-19 22:33:56,986 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[//a[text()="去购物车结算"]]元素并点击
2022-07-19 22:33:57,014 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第25步骤：去结算
2022-07-19 22:33:57,014 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//a[text()="去结算"]]元素
2022-07-19 22:33:59,566 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[//a[text()="去结算"]]元素并点击
2022-07-19 22:33:59,607 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第26步骤：下单备注留言
2022-07-19 22:33:59,607 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//textarea[@placeholder="最多输入50个字"]]元素
2022-07-19 22:34:00,577 --> SeleniumWrapper.py   [line:104] --> INFO  --> 以[xpath]方式定位[//textarea[@placeholder="最多输入50个字"]]元素并输入[给辉辉买个破烂手机]文本
2022-07-19 22:34:00,602 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第27步骤：强制等待2秒
2022-07-19 22:34:02,670 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第28步骤：向下滑动
2022-07-19 22:34:02,717 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第29步骤：提交定单
2022-07-19 22:34:02,717 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[/html/body/div[14]/div/button]元素
2022-07-19 22:34:03,646 --> SeleniumWrapper.py   [line:114] --> INFO  --> 以[xpath]方式定位[/html/body/div[14]/div/button]元素并点击
2022-07-19 22:34:03,671 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第30步骤：强制等待2秒
2022-07-19 22:34:05,729 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第31步骤：校验订单提交是否成功
2022-07-19 22:34:05,729 --> SeleniumWrapper.py   [line:87 ] --> INFO  --> 以[xpath]方式定位[//h3[text()="订单提交成功，请您尽快付款！"]]元素
2022-07-19 22:34:07,477 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第32步骤：订单提交成功截图
2022-07-19 22:34:07,477 --> SeleniumWrapper.py   [line:118] --> INFO  --> 截图成功存放路径：[./picture/订单提交成功截图.png]
2022-07-19 22:34:07,683 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第33步骤：强制等待2秒
2022-07-19 22:34:09,748 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第34步骤：获取当前URL
2022-07-19 22:34:09,779 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第35步骤：打开一个新的窗口
2022-07-19 22:34:09,850 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第36步骤：获取当前URL
2022-07-19 22:55:18,570 --> Main.py              [line:20 ] --> INFO  --> 运行./case/testcase.xlsx测试用例
2022-07-19 22:55:18,617 --> ReadExcel.py         [line:19 ] --> INFO  --> ---------------Sheet1---------------
2022-07-19 22:55:18,617 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第1步骤：创建Chrome浏览器
2022-07-19 22:55:19,802 --> WebDriverWrapper.py  [line:57 ] --> INFO  --> 启动浏览器 --> Chrome
2022-07-19 22:55:19,803 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第2步骤：访问电商系统
2022-07-19 22:55:19,803 --> SeleniumWrapper.py   [line:81 ] --> INFO  --> 访问[http://www.testingedu.com.cn:8000/Home/User/login.html]地址
2022-07-19 22:55:23,636 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第3步骤：输入账号
2022-07-19 22:55:23,636 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[name]方式定位[username]元素
2022-07-19 22:55:24,576 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[name]方式定位[username]元素并输入[13800138006]文本
2022-07-19 22:55:24,602 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第4步骤：输入密码
2022-07-19 22:55:24,602 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[password]元素
2022-07-19 22:55:25,502 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[id]方式定位[password]元素并输入[0000]文本
2022-07-19 22:55:25,538 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第5步骤：输入验证码
2022-07-19 22:55:25,539 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[verify_code]元素
2022-07-19 22:55:26,430 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[id]方式定位[verify_code]元素并输入[0000]文本
2022-07-19 22:55:26,456 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第6步骤：点击登录按钮
2022-07-19 22:55:26,456 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素
2022-07-19 22:55:27,363 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素并点击
2022-07-19 22:55:27,391 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第7步骤：登录成功后截图
2022-07-19 22:55:27,391 --> SeleniumWrapper.py   [line:140] --> INFO  --> 截图成功存放路径：[./picture/特斯汀电商系统登录成功1.png]
2022-07-19 22:55:27,702 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第8步骤：校验登录后是否存在退出的元素
2022-07-19 22:55:27,702 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[link text]方式定位[安全退出]元素
2022-07-19 22:55:37,754 --> SeleniumWrapper.py   [line:158] --> ERROR --> Traceback (most recent call last):
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 110, in locator_element
    self.hide_wait(name, value)
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 30, in hide_wait
    hide_wait.until(EC.visibility_of_element_located(lambda driver: driver.find_element(name, value)))
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\support\wait.py", line 71, in until
    value = method(self._driver)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\support\expected_conditions.py", line 128, in __call__
    return _element_if_visible(_find_element(driver, self.locator))
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\support\expected_conditions.py", line 411, in _find_element
    return driver.find_element(*by)
TypeError: find_element() argument after * must be an iterable, not function

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 154, in assert_text
    reality = self.locator_element(name, value).text
  File "E:\UIAutomation\base\SeleniumWrapper.py", line 114, in locator_element
    element = self.driver.find_element(name, value)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 978, in find_element
    'value': value})['value']
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 321, in execute
    self.error_handler.check_response(response)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"link text","selector":"安全退出"}
  (Session info: chrome=99.0.4844.74)


2022-07-19 22:55:37,788 --> ReadExcel.py         [line:19 ] --> INFO  --> ---------------Sheet3---------------
2022-07-19 22:55:37,788 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-19 22:55:37,863 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第2步骤：访问电商系统
2022-07-19 22:55:37,863 --> SeleniumWrapper.py   [line:81 ] --> INFO  --> 访问[http://www.testingedu.com.cn:8000/Home/User/login.html]地址
2022-07-19 22:55:38,253 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第3步骤：输入账号
2022-07-19 22:55:38,253 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[name]方式定位[username]元素
2022-07-19 22:55:39,171 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[name]方式定位[username]元素并输入[13800138006]文本
2022-07-19 22:55:39,211 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第4步骤：输入密码
2022-07-19 22:55:39,211 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[password]元素
2022-07-19 22:55:40,180 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[id]方式定位[password]元素并输入[123456]文本
2022-07-19 22:55:40,205 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第5步骤：输入验证码
2022-07-19 22:55:40,205 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[verify_code]元素
2022-07-19 22:55:41,115 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[id]方式定位[verify_code]元素并输入[0000]文本
2022-07-19 22:55:41,141 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第6步骤：点击登录按钮
2022-07-19 22:55:41,141 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素
2022-07-19 22:55:42,076 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[//a[@name="sbtbutton"]]元素并点击
2022-07-19 22:55:42,104 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第7步骤：登录成功后截图
2022-07-19 22:55:42,104 --> SeleniumWrapper.py   [line:140] --> INFO  --> 截图成功存放路径：[./picture/特斯汀电商系统登录成功3.png]
2022-07-19 22:55:43,566 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第8步骤：校验登录后是否存在退出的元素
2022-07-19 22:55:43,567 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[link text]方式定位[安全退出]元素
2022-07-19 22:55:44,508 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第9步骤：强制等待2秒
2022-07-19 22:55:46,575 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第10步骤：跳转到商城首页
2022-07-19 22:55:46,575 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[link text]方式定位[返回商城首页]元素
2022-07-19 22:56:18,214 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[link text]方式定位[返回商城首页]元素并点击
2022-07-19 22:56:18,273 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第11步骤：强制等待2秒
2022-07-19 22:56:20,310 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第12步骤：鼠标悬停到手机数码控件树上
2022-07-19 22:56:20,326 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[link text]方式定位[手机数码]元素
2022-07-19 22:56:21,560 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第13步骤：点击上步骤展开后菜单中的手机
2022-07-19 22:56:21,560 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//*[@id="cata-nav"]/div[1]/div[2]/div[1]/div[2]/dl[1]/dd/a[1]]元素
2022-07-19 22:56:22,542 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[//*[@id="cata-nav"]/div[1]/div[2]/div[1]/div[2]/dl[1]/dd/a[1]]元素并点击
2022-07-19 22:56:22,569 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第14步骤：跳转到新的页面
2022-07-19 22:56:22,603 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第15步骤：点击第一个商品
2022-07-19 22:56:22,603 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img]元素
2022-07-19 22:56:27,705 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img]元素并点击
2022-07-19 22:56:27,787 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第16步骤：强制等待2秒
2022-07-19 22:56:29,809 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第17步骤：选择版本：全网通4G+64G
2022-07-19 22:56:29,809 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[goods_spec_a_10]元素
2022-07-19 22:56:30,766 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[id]方式定位[goods_spec_a_10]元素并点击
2022-07-19 22:56:30,804 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第18步骤：选择配色：铂光色
2022-07-19 22:56:30,805 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[goods_spec_a_12]元素
2022-07-19 22:56:31,794 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[id]方式定位[goods_spec_a_12]元素并点击
2022-07-19 22:56:31,856 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第19步骤：选择套餐：套餐二
2022-07-19 22:56:31,856 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[goods_spec_a_17]元素
2022-07-19 22:56:32,815 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[id]方式定位[goods_spec_a_17]元素并点击
2022-07-19 22:56:32,841 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第20步骤：加入购物车
2022-07-19 22:56:32,841 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[id]方式定位[join_cart]元素
2022-07-19 22:56:33,803 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[id]方式定位[join_cart]元素并点击
2022-07-19 22:56:33,848 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第21步骤：切入弹出frame
2022-07-19 22:56:34,944 --> SeleniumWrapper.py   [line:218] --> INFO  --> 切入[layui-layer-iframe1]Frame框架成功！
2022-07-19 22:56:34,970 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第22步骤：校验是否成功加入购物车
2022-07-19 22:56:34,970 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//span[text()="添加成功"]]元素
2022-07-19 22:56:35,924 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第23步骤：商品加入购物车成功截图
2022-07-19 22:56:35,924 --> SeleniumWrapper.py   [line:140] --> INFO  --> 截图成功存放路径：[./picture/商品加入购物车成功.png]
2022-07-19 22:56:36,225 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第24步骤：去购物车结算
2022-07-19 22:56:36,225 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//a[text()="去购物车结算"]]元素
2022-07-19 22:56:37,471 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[//a[text()="去购物车结算"]]元素并点击
2022-07-19 22:56:37,497 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第25步骤：去结算
2022-07-19 22:56:37,497 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//a[text()="去结算"]]元素
2022-07-19 22:56:40,091 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[//a[text()="去结算"]]元素并点击
2022-07-19 22:56:40,123 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第26步骤：下单备注留言
2022-07-19 22:56:40,123 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//textarea[@placeholder="最多输入50个字"]]元素
2022-07-19 22:56:41,101 --> SeleniumWrapper.py   [line:126] --> INFO  --> 以[xpath]方式定位[//textarea[@placeholder="最多输入50个字"]]元素并输入[给辉辉买个破烂手机]文本
2022-07-19 22:56:41,127 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第27步骤：强制等待2秒
2022-07-19 22:56:43,197 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第28步骤：向下滑动
2022-07-19 22:56:43,245 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第29步骤：提交定单
2022-07-19 22:56:43,245 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[/html/body/div[14]/div/button]元素
2022-07-19 22:56:44,207 --> SeleniumWrapper.py   [line:136] --> INFO  --> 以[xpath]方式定位[/html/body/div[14]/div/button]元素并点击
2022-07-19 22:56:44,243 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第30步骤：强制等待2秒
2022-07-19 22:56:46,270 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第31步骤：校验订单提交是否成功
2022-07-19 22:56:46,270 --> SeleniumWrapper.py   [line:109] --> INFO  --> 以[xpath]方式定位[//h3[text()="订单提交成功，请您尽快付款！"]]元素
2022-07-19 22:56:48,073 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第32步骤：订单提交成功截图
2022-07-19 22:56:48,073 --> SeleniumWrapper.py   [line:140] --> INFO  --> 截图成功存放路径：[./picture/订单提交成功截图.png]
2022-07-19 22:56:48,282 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第33步骤：强制等待2秒
2022-07-19 22:56:50,360 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第34步骤：获取当前URL
2022-07-19 22:56:50,392 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第35步骤：打开一个新的窗口
2022-07-19 22:56:50,456 --> ReadExcel.py         [line:23 ] --> INFO  --> 执行用例第36步骤：获取当前URL
