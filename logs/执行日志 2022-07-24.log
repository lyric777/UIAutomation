2022-07-24 15:17:02,925 --> Main.py              [line:24 ] --> INFO  --> 加载[E:\UIAutomation/case/testcase.xlsx]测试用例文件...
2022-07-24 15:17:02,987 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:02,987 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:02,987 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [登录失败] 用例----------
2022-07-24 15:17:02,987 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:02,987 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:03,003 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：创建Chrome浏览器
2022-07-24 15:17:04,230 --> WebDriverWrapper.py  [line:58 ] --> INFO  --> webdriver对象：启动浏览器[Chrome] --> 成功!
2022-07-24 15:17:04,230 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问特斯汀电商系统
2022-07-24 15:17:04,230 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://www.testingedu.com.cn:8000/Home/User/login.html]地址!
2022-07-24 15:17:09,438 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：输入账号
2022-07-24 15:17:09,438 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[name]方式定位[username]元素!
2022-07-24 15:17:10,420 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[name]方式定位[username]元素并输入[807440781@qq.com]文本!
2022-07-24 15:17:10,463 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：输入错误的密码
2022-07-24 15:17:10,463 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[password]元素!
2022-07-24 15:17:11,419 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[id]方式定位[password]元素并输入[0000]文本!
2022-07-24 15:17:11,464 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：输入验证码
2022-07-24 15:17:11,464 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[verify_code]元素!
2022-07-24 15:17:12,381 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[id]方式定位[verify_code]元素并输入[0000]文本!
2022-07-24 15:17:12,449 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：点击登录按钮
2022-07-24 15:17:12,449 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[@name="sbtbutton"]]元素!
2022-07-24 15:17:13,352 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[@name="sbtbutton"]]元素并点击!
2022-07-24 15:17:13,398 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第7步骤：强制等待2秒
2022-07-24 15:17:15,454 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第8步骤：检查是否登录成功
2022-07-24 15:17:15,454 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[安全退出]元素!
2022-07-24 15:17:26,033 --> WebDriverWrapper.py  [line:196] --> INFO  --> webdriver对象：找不到元素，以[link text]方式定位[安全退出]元素定位失败!
2022-07-24 15:17:36,063 --> WebDriverWrapper.py  [line:330] --> ERROR --> Traceback (most recent call last):
  File "E:\UIAutomation\base\WebDriverWrapper.py", line 326, in assert_text
    reality = self.locator_element(name, value).text
  File "E:\UIAutomation\base\WebDriverWrapper.py", line 198, in locator_element
    element = self.driver.find_element(name, value)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 978, in find_element
    'value': value})['value']
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 321, in execute
    self.error_handler.check_response(response)
  File "E:\ITWork\Python365\lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"link text","selector":"安全退出"}
  (Session info: chrome=99.0.4844.74)


2022-07-24 15:17:36,109 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第9步骤：登录成功后截图
2022-07-24 15:17:36,436 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\特斯汀电商系统登录失败.png]!
2022-07-24 15:17:36,483 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:36,483 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:36,483 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [百度搜索] 用例----------
2022-07-24 15:17:36,483 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:36,483 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:36,483 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-24 15:17:36,574 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问百度
2022-07-24 15:17:36,574 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://www.baidu.com/]地址!
2022-07-24 15:17:39,956 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：在搜索框内输入关键词
2022-07-24 15:17:39,956 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[kw]元素!
2022-07-24 15:17:41,119 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[id]方式定位[kw]元素并输入[中国]文本!
2022-07-24 15:17:41,185 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：点击百度一下按钮
2022-07-24 15:17:41,185 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[su]元素!
2022-07-24 15:17:42,190 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[id]方式定位[su]元素并点击!
2022-07-24 15:17:42,249 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：点击登录按钮
2022-07-24 15:17:44,318 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：检查搜索内容是否出现
2022-07-24 15:17:44,318 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[中华人民共和国 - 百度百科]元素!
2022-07-24 15:17:45,445 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第7步骤：搜索成功后截图
2022-07-24 15:17:45,744 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\百度一下搜索中国.png]!
2022-07-24 15:17:45,795 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第8步骤：获取当前URL
2022-07-24 15:17:45,856 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第9步骤：获取当前URL
2022-07-24 15:17:45,914 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:45,915 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:45,915 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [矩形标记] 用例----------
2022-07-24 15:17:45,915 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:45,915 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:45,915 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-24 15:17:46,014 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问sahitest测试页
2022-07-24 15:17:46,015 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://sahitest.com/demo/index.htm]地址!
2022-07-24 15:17:46,799 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：矩形标记多个元素
2022-07-24 15:17:46,800 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/table/tbody]元素!
2022-07-24 15:17:47,890 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/table/tbody/tr/td[1]]元素!
2022-07-24 15:17:48,820 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[text()="Prompt Page"]]元素!
2022-07-24 15:17:49,796 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/table/tbody/tr/td[4]]元素!
2022-07-24 15:17:50,795 --> PictureDispose.py    [line:44 ] --> INFO  --> webdriver对象：截图并矩形标记成功，存放路径：[E:\UIAutomation\picture\proce_pic\矩形标记.png]!
2022-07-24 15:17:50,841 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:50,841 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:50,841 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [综合购物] 用例----------
2022-07-24 15:17:50,841 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:50,841 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:17:50,841 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-24 15:17:50,952 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问电商系统
2022-07-24 15:17:50,952 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://www.testingedu.com.cn:8000/Home/User/login.html]地址!
2022-07-24 15:17:51,427 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：输入账号
2022-07-24 15:17:51,427 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[name]方式定位[username]元素!
2022-07-24 15:17:52,438 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[name]方式定位[username]元素并输入[807440781@qq.com]文本!
2022-07-24 15:17:52,482 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：输入密码
2022-07-24 15:17:52,482 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[password]元素!
2022-07-24 15:17:53,465 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[id]方式定位[password]元素并输入[yk145312]文本!
2022-07-24 15:17:53,514 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：输入验证码
2022-07-24 15:17:53,514 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[verify_code]元素!
2022-07-24 15:17:54,450 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[id]方式定位[verify_code]元素并输入[0000]文本!
2022-07-24 15:17:54,498 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：点击登录按钮
2022-07-24 15:17:54,498 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[@name="sbtbutton"]]元素!
2022-07-24 15:17:55,436 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[@name="sbtbutton"]]元素并点击!
2022-07-24 15:17:55,481 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第7步骤：强制等待2秒
2022-07-24 15:17:57,559 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第8步骤：校验登录后是否存在退出的元素
2022-07-24 15:17:57,559 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[安全退出]元素!
2022-07-24 15:17:58,592 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第9步骤：登录成功后截图
2022-07-24 15:17:58,759 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\特斯汀电商系统登录成功.png]!
2022-07-24 15:17:58,806 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第10步骤：强制等待2秒
2022-07-24 15:18:00,884 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第11步骤：跳转到商城首页
2022-07-24 15:18:00,884 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[返回商城首页]元素!
2022-07-24 15:18:33,670 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[返回商城首页]元素并点击!
2022-07-24 15:18:33,722 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第12步骤：强制等待2秒
2022-07-24 15:18:35,830 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第13步骤：鼠标悬停到手机数码控件树上
2022-07-24 15:18:35,830 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[手机数码]元素!
2022-07-24 15:18:37,179 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第14步骤：点击上步骤展开后菜单中的手机
2022-07-24 15:18:37,179 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//*[@id="cata-nav"]/div[1]/div[2]/div[1]/div[2]/dl[1]/dd/a[1]]元素!
2022-07-24 15:18:38,218 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[//*[@id="cata-nav"]/div[1]/div[2]/div[1]/div[2]/dl[1]/dd/a[1]]元素并点击!
2022-07-24 15:18:38,278 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第15步骤：跳转到新的页面
2022-07-24 15:18:38,345 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第16步骤：点击第一个商品
2022-07-24 15:18:38,346 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img]元素!
2022-07-24 15:18:44,075 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img]元素并点击!
2022-07-24 15:18:44,130 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第17步骤：强制等待2秒
2022-07-24 15:18:46,201 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第18步骤：选择版本：全网通4G+64G
2022-07-24 15:18:46,201 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[goods_spec_a_10]元素!
2022-07-24 15:18:47,156 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[id]方式定位[goods_spec_a_10]元素并点击!
2022-07-24 15:18:47,213 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第19步骤：选择配色：铂光色
2022-07-24 15:18:47,213 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[goods_spec_a_12]元素!
2022-07-24 15:18:48,148 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[id]方式定位[goods_spec_a_12]元素并点击!
2022-07-24 15:18:48,205 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第20步骤：选择套餐：套餐二
2022-07-24 15:18:48,205 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[goods_spec_a_17]元素!
2022-07-24 15:18:49,173 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[id]方式定位[goods_spec_a_17]元素并点击!
2022-07-24 15:18:49,226 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第21步骤：加入购物车
2022-07-24 15:18:49,226 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[id]方式定位[join_cart]元素!
2022-07-24 15:18:50,234 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[id]方式定位[join_cart]元素并点击!
2022-07-24 15:18:50,293 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第22步骤：切入弹出frame
2022-07-24 15:18:51,376 --> WebDriverWrapper.py  [line:401] --> INFO  --> webdriver对象：切入[layui-layer-iframe1]Frame框架成功!
2022-07-24 15:18:51,446 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第23步骤：校验是否成功加入购物车
2022-07-24 15:18:51,446 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//span[text()="添加成功"]]元素!
2022-07-24 15:18:52,433 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第24步骤：商品加入购物车成功截图
2022-07-24 15:18:52,725 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\商品加入购物车成功.png]!
2022-07-24 15:18:52,772 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第25步骤：去购物车结算
2022-07-24 15:18:52,772 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[text()="去购物车结算"]]元素!
2022-07-24 15:18:54,055 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[text()="去购物车结算"]]元素并点击!
2022-07-24 15:18:54,137 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第26步骤：去结算
2022-07-24 15:18:54,137 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[text()="去结算"]]元素!
2022-07-24 15:18:56,674 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[//a[text()="去结算"]]元素并点击!
2022-07-24 15:18:56,736 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第27步骤：下单备注留言
2022-07-24 15:18:56,736 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//textarea[@placeholder="最多输入50个字"]]元素!
2022-07-24 15:18:57,719 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[xpath]方式定位[//textarea[@placeholder="最多输入50个字"]]元素并输入[给辉辉买个破烂手机]文本!
2022-07-24 15:18:57,765 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第28步骤：强制等待2秒
2022-07-24 15:18:59,864 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第29步骤：向下滑动
2022-07-24 15:18:59,923 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第30步骤：提交定单
2022-07-24 15:18:59,923 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/div[14]/div/button]元素!
2022-07-24 15:19:00,899 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/div[14]/div/button]元素并点击!
2022-07-24 15:19:00,959 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第31步骤：强制等待2秒
2022-07-24 15:19:03,096 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第32步骤：校验订单提交是否成功
2022-07-24 15:19:03,096 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//h3[text()="订单提交成功，请您尽快付款！"]]元素!
2022-07-24 15:19:04,805 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第33步骤：订单提交成功截图
2022-07-24 15:19:04,953 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\订单提交成功截图.png]!
2022-07-24 15:19:05,016 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第34步骤：强制等待2秒
2022-07-24 15:19:07,111 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第35步骤：获取当前URL
2022-07-24 15:19:07,158 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第36步骤：获取当前标题
2022-07-24 15:19:07,205 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:07,220 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:07,220 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [iframe] 用例----------
2022-07-24 15:19:07,220 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:07,220 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:07,220 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-24 15:19:07,308 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问sahitest系统
2022-07-24 15:19:07,308 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://sahitest.com/demo/index.htm]地址!
2022-07-24 15:19:07,457 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：点击IFrames Test链接
2022-07-24 15:19:07,457 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[IFrames Test]元素!
2022-07-24 15:19:08,780 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[IFrames Test]元素并点击!
2022-07-24 15:19:08,845 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：强制等待2秒
2022-07-24 15:19:10,931 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：切换到iframe框架1
2022-07-24 15:19:10,931 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/iframe]元素!
2022-07-24 15:19:11,903 --> WebDriverWrapper.py  [line:397] --> INFO  --> webdriver对象：切入[<selenium.webdriver.remote.webelement.WebElement (session="050b0e174dc276d69d2c93b76c515a22", element="450b2c2f-0ce5-48f6-b458-d54f876264e4")>]Frame框架成功!
2022-07-24 15:19:11,965 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：点击H2标题元素1
2022-07-24 15:19:11,965 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素!
2022-07-24 15:19:12,953 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素并点击!
2022-07-24 15:19:12,996 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第7步骤：滑动滚动条至300码数
2022-07-24 15:19:13,048 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第8步骤：点击Frames Test链接
2022-07-24 15:19:13,048 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素!
2022-07-24 15:19:14,280 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素并点击!
2022-07-24 15:19:14,353 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第9步骤：校验上述动作是否完成
2022-07-24 15:19:14,537 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\检查截图1.png]!
2022-07-24 15:19:14,592 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第10步骤：进入top框架
2022-07-24 15:19:24,658 --> WebDriverWrapper.py  [line:401] --> INFO  --> webdriver对象：切入[top]Frame框架成功!
2022-07-24 15:19:24,705 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第11步骤：点击top的H2
2022-07-24 15:19:24,705 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素!
2022-07-24 15:19:25,681 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素并点击!
2022-07-24 15:19:25,728 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第12步骤：滑动滚动条至300码数
2022-07-24 15:19:25,796 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第13步骤：点击Frames Test链接
2022-07-24 15:19:25,796 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素!
2022-07-24 15:19:26,825 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素并点击!
2022-07-24 15:19:26,882 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第14步骤：校验上述动作是否完成
2022-07-24 15:19:27,086 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\检查截图2.png]!
2022-07-24 15:19:27,138 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第15步骤：返回默认框架
2022-07-24 15:19:27,192 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第16步骤：进入bom框架
2022-07-24 15:19:27,192 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/frameset/frame[2]]元素!
2022-07-24 15:19:28,118 --> WebDriverWrapper.py  [line:397] --> INFO  --> webdriver对象：切入[<selenium.webdriver.remote.webelement.WebElement (session="050b0e174dc276d69d2c93b76c515a22", element="759a7e20-a2a9-4e44-8bb0-e1c95608e6db")>]Frame框架成功!
2022-07-24 15:19:28,167 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第17步骤：点击bom的H2
2022-07-24 15:19:28,167 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素!
2022-07-24 15:19:29,181 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素并点击!
2022-07-24 15:19:29,229 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第18步骤：滑动滚动条至300码数
2022-07-24 15:19:29,282 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第19步骤：点击Frames Test链接
2022-07-24 15:19:29,282 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素!
2022-07-24 15:19:30,314 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素并点击!
2022-07-24 15:19:30,364 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第20步骤：校验上述动作是否完成
2022-07-24 15:19:30,536 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\检查截图3.png]!
2022-07-24 15:19:30,589 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第21步骤：返回默认框架
2022-07-24 15:19:30,645 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第22步骤：进入bom框架
2022-07-24 15:19:30,645 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//*[@id="another"]/iframe]元素!
2022-07-24 15:19:31,567 --> WebDriverWrapper.py  [line:397] --> INFO  --> webdriver对象：切入[<selenium.webdriver.remote.webelement.WebElement (session="050b0e174dc276d69d2c93b76c515a22", element="7b048a68-e99a-4e54-b098-14d5f47ba630")>]Frame框架成功!
2022-07-24 15:19:31,627 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第23步骤：点击bom的H2
2022-07-24 15:19:31,627 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素!
2022-07-24 15:19:32,606 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/h2]元素并点击!
2022-07-24 15:19:32,659 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第24步骤：滑动滚动条至300码数
2022-07-24 15:19:32,715 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第25步骤：点击Frames Test链接
2022-07-24 15:19:32,715 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素!
2022-07-24 15:19:33,696 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Frames Test]元素并点击!
2022-07-24 15:19:33,748 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第26步骤：校验上述动作是否完成
2022-07-24 15:19:33,894 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\检查截图4.png]!
2022-07-24 15:19:33,955 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:33,955 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:33,955 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [Select] 用例----------
2022-07-24 15:19:33,955 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:33,955 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:33,955 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-24 15:19:34,041 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问sahitest系统
2022-07-24 15:19:34,041 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://sahitest.com/demo/index.htm]地址!
2022-07-24 15:19:34,134 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：点击Select Test链接
2022-07-24 15:19:34,134 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Select Test]元素!
2022-07-24 15:19:35,240 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Select Test]元素并点击!
2022-07-24 15:19:35,293 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：强制等待2秒
2022-07-24 15:19:37,399 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：第一个下拉框
2022-07-24 15:19:37,399 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//*[@id="s1Id"]]元素!
2022-07-24 15:19:38,480 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：强制等待0.5秒
2022-07-24 15:19:39,075 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第7步骤：第二个下拉框
2022-07-24 15:19:39,075 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//*[@id="s2Id"]]元素!
2022-07-24 15:19:40,114 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第8步骤：强制等待0.5秒
2022-07-24 15:19:40,698 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第9步骤：第三个下拉框
2022-07-24 15:19:40,698 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//*[@id="s3Id"]]元素!
2022-07-24 15:19:41,713 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第10步骤：强制等待0.5秒
2022-07-24 15:19:42,334 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第11步骤：第四个下拉框1
2022-07-24 15:19:42,334 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//select[@id="s4Id"]]元素!
2022-07-24 15:19:43,415 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第12步骤：强制等待0.5秒
2022-07-24 15:19:44,024 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第13步骤：第四个下拉框2
2022-07-24 15:19:44,024 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//select[@id="s4Id"]]元素!
2022-07-24 15:19:45,015 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第14步骤：强制等待0.5秒
2022-07-24 15:19:45,618 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第15步骤：第四个下拉框3
2022-07-24 15:19:45,618 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//select[@id="s4Id"]]元素!
2022-07-24 15:19:46,628 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第16步骤：强制等待0.5秒
2022-07-24 15:19:47,217 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第17步骤：第五个下拉框
2022-07-24 15:19:47,217 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[//select[@id="s1"]]元素!
2022-07-24 15:19:48,246 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第18步骤：截图存根
2022-07-24 15:19:48,425 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\检查下拉选择截图.png]!
2022-07-24 15:19:48,487 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:48,487 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:48,487 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [elements] 用例----------
2022-07-24 15:19:48,487 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:48,487 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:48,487 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：打开新的标签页
2022-07-24 15:19:48,592 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问sahitest系统
2022-07-24 15:19:48,592 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://sahitest.com/demo/index.htm]地址!
2022-07-24 15:19:48,679 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：点击Label Page链接
2022-07-24 15:19:48,679 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Label Page]元素!
2022-07-24 15:19:49,889 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Label Page]元素并点击!
2022-07-24 15:19:49,956 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：强制等待2秒
2022-07-24 15:19:52,035 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：第一个下拉框
2022-07-24 15:19:52,035 --> WebDriverWrapper.py  [line:210] --> INFO  --> webdriver对象：以[xpath]方式定位[//input[@type="checkbox"]]一组元素!
2022-07-24 15:19:52,082 --> WebDriverWrapper.py  [line:121] --> ERROR --> webdriver对象：无法执行[arguments[0].setAttribute('style',arguments[1]);]script脚本!
2022-07-24 15:19:52,283 --> WebDriverWrapper.py  [line:121] --> ERROR --> webdriver对象：无法执行[arguments[0].setAttribute('style',arguments[1]);]script脚本!
2022-07-24 15:19:52,486 --> WebDriverWrapper.py  [line:121] --> ERROR --> webdriver对象：无法执行[arguments[0].setAttribute('style',arguments[1]);]script脚本!
2022-07-24 15:19:52,706 --> WebDriverWrapper.py  [line:121] --> ERROR --> webdriver对象：无法执行[arguments[0].setAttribute('style',arguments[1]);]script脚本!
2022-07-24 15:19:53,031 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：截图存根
2022-07-24 15:19:53,252 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\点击一组box中的第3个.png]!
2022-07-24 15:19:53,299 --> ReadExcel.py         [line:21 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:53,299 --> ReadExcel.py         [line:22 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:53,299 --> ReadExcel.py         [line:23 ] --> INFO  --> ----------开始执行：[testcase] --->>> [alert] 用例----------
2022-07-24 15:19:53,299 --> ReadExcel.py         [line:24 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:53,299 --> ReadExcel.py         [line:25 ] --> INFO  --> ------------------------------------------------------------
2022-07-24 15:19:53,299 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第1步骤：创建Chrome浏览器
2022-07-24 15:19:53,389 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第2步骤：访问sahitest系统
2022-07-24 15:19:53,389 --> WebDriverWrapper.py  [line:160] --> INFO  --> webdriver对象：访问[http://sahitest.com/demo/index.htm]地址!
2022-07-24 15:19:53,475 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第3步骤：点击Alert Test链接
2022-07-24 15:19:53,475 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[link text]方式定位[Alert Test]元素!
2022-07-24 15:19:54,687 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[link text]方式定位[Alert Test]元素并点击!
2022-07-24 15:19:54,743 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第4步骤：将输入框的预设值清空
2022-07-24 15:19:54,744 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/form/input[1]]元素!
2022-07-24 15:19:55,731 --> WebDriverWrapper.py  [line:238] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/form/input[1]]元素并清空预设值!
2022-07-24 15:19:55,780 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第5步骤：在弹出框中输入值
2022-07-24 15:19:55,780 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/form/input[1]]元素!
2022-07-24 15:19:56,742 --> WebDriverWrapper.py  [line:228] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/form/input[1]]元素并输入[测试弹框1]文本!
2022-07-24 15:19:56,797 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第6步骤：点击Click For Alert按钮
2022-07-24 15:19:56,797 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/form/input[2]]元素!
2022-07-24 15:19:57,702 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[xpath]方式定位[/html/body/form/input[2]]元素并点击!
2022-07-24 15:19:57,759 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第7步骤：等待2秒
2022-07-24 15:19:59,855 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第8步骤：检查弹出框内容
2022-07-24 15:19:59,862 --> WebDriverWrapper.py  [line:372] --> ERROR --> Traceback (most recent call last):
  File "E:\UIAutomation\base\WebDriverWrapper.py", line 369, in assert_alert
    assert expect == alert_text or expect in alert_text, '断言失败'
AssertionError: 断言失败

2022-07-24 15:19:59,929 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第9步骤：检查第一个弹出框是否关闭
2022-07-24 15:20:00,094 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\关闭第一个alert弹出框.png]!
2022-07-24 15:20:00,158 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第10步骤：点击Click For Multiline Alert按钮
2022-07-24 15:20:00,158 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[name]方式定位[b2]元素!
2022-07-24 15:20:01,116 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[name]方式定位[b2]元素并点击!
2022-07-24 15:20:01,176 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第11步骤：等待2秒
2022-07-24 15:20:03,274 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第12步骤：检查弹出框内容
2022-07-24 15:20:03,346 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第13步骤：点击Click For Multiline Alert按钮
2022-07-24 15:20:03,347 --> WebDriverWrapper.py  [line:193] --> INFO  --> webdriver对象：以[name]方式定位[b3]元素!
2022-07-24 15:20:04,302 --> WebDriverWrapper.py  [line:248] --> INFO  --> webdriver对象：以[name]方式定位[b3]元素并点击!
2022-07-24 15:20:04,367 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第14步骤：等待2秒
2022-07-24 15:20:06,461 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第15步骤：检查弹出框内容
2022-07-24 15:20:06,524 --> ReadExcel.py         [line:29 ] --> INFO  --> 执行用例第16步骤：检查第三个弹出框是否关闭
2022-07-24 15:20:06,711 --> PictureDispose.py    [line:61 ] --> INFO  --> webdriver对象：截图成功，存放路径：[E:\UIAutomation\picture\proce_pic\关闭第三个alert弹出框.png]!
